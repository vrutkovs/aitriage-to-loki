server:
  disable: true
clients:
  - url: http://127.0.0.1:3100/api/prom/push
positions:
  filename: /tmp/positions.yaml
scrape_configs:
- job_name: hosts
  static_configs:
  - targets:
      - localhost
    labels:
      job: hosts-logs
      __path__: /var/log/cluster_*_logs/logs_host_*/{agent,bootkube,installer}.logs
  pipeline_stages:
    - match:
        selector: '{job="hosts-logs"}'
        stages:
        - regex:
           source: filename
           expression: '/var/log/cluster_(?P<cluster_id>\S+?)_logs/logs_host_(?P<host_id>\S+?)/(?P<service>\S+?).logs'
        - labels:
           service:
           host_id:
           cluster_id:
        - match:
            selector: '{service="bootstrap|agent"}'
            stages:
            - regex:
                expression: '(?P<time>\S+\s\d+\s\S+?) (?P<hostname>\S+?) (?P<systemd_service>\S+?)\[\S+\]: (?P<message>.*)'
            - timestamp:
                source: time
                format: Jan 02 15:04:05
            - labels:
                hostname:
                systemd_service:
            - output:
                source: message
        - match:
            selector: '{service="installer"}'
            stages:
            - regex:
                expression: 'time="(?P<timestamp>[\w+T\d-:.Z]+)" level=(?P<level>[a-zA-Z]+) msg="(?P<msg>.+)"'
            - timestamp:
                source: timestamp
                format: RFC3339Nano
            - labels:
                level:
            - output:
                source: msg
- job_name: controller
  static_configs:
  - targets:
      - localhost
    labels:
      job: controller-logs
      __path__: /var/log/cluster_*_logs/assisted-installer-controller*.logs
  pipeline_stages:
    - match:
        selector: '{job="controller-logs"}'
        stages:
        - regex:
            source: filename
            expression: '/var/log/cluster_(?P<cluster_id>\S+?)_logs/.*'
        - labels:
            cluster_id:
        - regex:
            expression: 'time="(?P<timestamp>[\w+T\d-:.Z]+)" level=(?P<level>[a-zA-Z]+) msg="(?P<msg>.+)"'
        - timestamp:
            source: timestamp
            format: RFC3339Nano
        - labels:
            level:
        - output:
            source: msg
- job_name: installer-gather
  static_configs:
  - targets:
      - localhost
    labels:
      job: installer-gather
      __path__: /var/log/*/log-bundle*/**/*.{txt,log,inspect}
  pipeline_stages:
    - match:
        selector: '{job="installer-gather"}'
        stages:
        - regex:
           source: filename
           expression: '/var/log/cluster_(?P<cluster_id>\S+?)_logs/'
        - labels:
           cluster_id:
- job_name: must-gather
  static_configs:
  - targets:
      - localhost
    labels:
      job: must-gather
      __path__: /var/log/*/must-gather*/**/*.{txt,log,inspect,json,yaml}
  pipeline_stages:
    - match:
        selector: '{job="must-gather"}'
        stages:
        - regex:
           source: filename
           expression: '/var/log/cluster_(?P<cluster_id>\S+?)_logs/'
        - labels:
           cluster_id:
- job_name: cluster-events
  static_configs:
  - targets:
      - localhost
    labels:
      job: cluster-events
      __path__: /var/log/artifacts/cluster_*_events.json
  pipeline_stages:
  - multiline:
      firstline: '(^\W+\{(.*))|([^\}\s]\s$)'
  - replace:
      expression: '(\n)'
      replace: ''
  - replace:
      expression: '(\},)'
      replace: '}'
  - json:
      expressions:
        output: message
        event_time: event_time
        cluster_id: cluster_id
        event_name: name
        event_severity: severity
  - timestamp:
      source: event_time
      format: RFC3339Nano
  - labels:
      cluster_id:
      event_name:
      event_severity:
- job_name: infraenv-events
  static_configs:
  - targets:
      - localhost
    labels:
      job: infraenv-events
      __path__: /var/log/artifacts/infraenv_*_events.json
  pipeline_stages:
  - multiline:
      firstline: '(^\W+\{(.*))|([^\}\s]\s$)'
  - replace:
      expression: '(\n)'
      replace: ''
  - replace:
      expression: '(\},)'
      replace: '}'
  - json:
      expressions:
        output: message
        event_time: event_time
        cluster_id: cluster_id
        host_id: host_id
        infra_env_id: infra_env_id
        event_name: name
        event_severity: severity
  - timestamp:
      source: event_time
      format: RFC3339Nano
  - labels:
      cluster_id:
      event_name:
      event_severity:
      host_id:
      infra_env_id:
